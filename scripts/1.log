[0/1] Planning build
[1/1] Compiling plugin GenerateManual
[2/2] Compiling plugin GenerateDoccReference
Building for debugging...
[2/6] Write swift-version--58304C5D6DBC2206.txt
[4/52] Compiling ArgumentParser InputKey.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[5/52] Compiling ArgumentParser InputOrigin.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[6/52] Compiling ArgumentParser Name.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[7/52] Compiling ArgumentParser Parsed.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[8/52] Compiling ArgumentParser ParsedValues.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[9/52] Compiling ArgumentParser ArgumentDiscussion.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[10/52] Compiling ArgumentParser ArgumentHelp.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[11/52] Compiling ArgumentParser ArgumentVisibility.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[12/52] Compiling ArgumentParser CompletionKind.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[13/52] Compiling ArgumentParser Errors.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
error: emit-module command failed with exit code 1 (use -v to see invocation)
[14/52] Emitting module ArgumentParser
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[15/56] Compiling ArgumentParser MessageInfo.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[16/56] Compiling ArgumentParser UsageGenerator.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[17/56] Compiling ArgumentParser CollectionExtensions.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[18/56] Compiling ArgumentParser Mutex.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[19/56] Compiling ArgumentParser Platform.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[20/56] Compiling ArgumentParser CommandConfiguration.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[21/56] Compiling ArgumentParser CommandGroup.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[22/56] Compiling ArgumentParser EnumerableFlag.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[23/56] Compiling ArgumentParser ExpressibleByArgument.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[24/56] Compiling ArgumentParser ParsableArguments.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[25/56] Compiling ArgumentParser ParserError.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Parsing/SplitArguments.swift:544:17: error: for-in loop requires 'InputOrigin' to conform to 'Sequence'
542 |     // swift-format-ignore: ReplaceForEachWithForLoop
543 |     // does not conform to collection.
544 |     for item in origin {
    |                 `- error: for-in loop requires 'InputOrigin' to conform to 'Sequence'
545 |       remove(at: item)
546 |     }
[26/56] Compiling ArgumentParser SplitArguments.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Parsing/SplitArguments.swift:544:17: error: for-in loop requires 'InputOrigin' to conform to 'Sequence'
542 |     // swift-format-ignore: ReplaceForEachWithForLoop
543 |     // does not conform to collection.
544 |     for item in origin {
    |                 `- error: for-in loop requires 'InputOrigin' to conform to 'Sequence'
545 |       remove(at: item)
546 |     }
[27/56] Compiling ArgumentParser DumpHelpGenerator.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Parsing/SplitArguments.swift:544:17: error: for-in loop requires 'InputOrigin' to conform to 'Sequence'
542 |     // swift-format-ignore: ReplaceForEachWithForLoop
543 |     // does not conform to collection.
544 |     for item in origin {
    |                 `- error: for-in loop requires 'InputOrigin' to conform to 'Sequence'
545 |       remove(at: item)
546 |     }
[28/56] Compiling ArgumentParser HelpCommand.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Parsing/SplitArguments.swift:544:17: error: for-in loop requires 'InputOrigin' to conform to 'Sequence'
542 |     // swift-format-ignore: ReplaceForEachWithForLoop
543 |     // does not conform to collection.
544 |     for item in origin {
    |                 `- error: for-in loop requires 'InputOrigin' to conform to 'Sequence'
545 |       remove(at: item)
546 |     }
[29/56] Compiling ArgumentParser HelpGenerator.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Parsing/SplitArguments.swift:544:17: error: for-in loop requires 'InputOrigin' to conform to 'Sequence'
542 |     // swift-format-ignore: ReplaceForEachWithForLoop
543 |     // does not conform to collection.
544 |     for item in origin {
    |                 `- error: for-in loop requires 'InputOrigin' to conform to 'Sequence'
545 |       remove(at: item)
546 |     }
[30/56] Compiling ArgumentParser SequenceExtensions.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[31/56] Compiling ArgumentParser StringExtensions.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[32/56] Compiling ArgumentParser SwiftExtensions.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[33/56] Compiling ArgumentParser Tree.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[34/56] Compiling ArgumentParser CodingKeyValidator.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[35/56] Compiling ArgumentParser Flag.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[36/56] Compiling ArgumentParser NameSpecification.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[37/56] Compiling ArgumentParser Option.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[38/56] Compiling ArgumentParser OptionGroup.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[39/56] Compiling ArgumentParser AsyncParsableCommand.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[40/56] Compiling ArgumentParser BashCompletionsGenerator.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:318:23: error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
316 |   /// Returns flag completions.
317 |   private var flagCompletions: [String] {
318 |     (arguments ?? []).flatMap {
    |                       |- error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
    |                       |- note: only concrete types such as structs, enums and classes can conform to protocols
    |                       `- note: required by instance method 'flatMap' where 'SegmentOfResult' = 'Void'
319 |       switch $0.kind {
320 |       case .flag:

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:330:23: error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
328 |   /// Returns option completions.
329 |   private var optionCompletions: [String] {
330 |     (arguments ?? []).flatMap {
    |                       |- error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
    |                       |- note: only concrete types such as structs, enums and classes can conform to protocols
    |                       `- note: required by instance method 'flatMap' where 'SegmentOfResult' = 'Void'
331 |       switch $0.kind {
332 |       case .option:

[#ProtocolTypeNonConformance]: <https://docs.swift.org/compiler/documentation/diagnostics/protocol-type-non-conformance>
[41/56] Compiling ArgumentParser CompletionsGenerator.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:318:23: error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
316 |   /// Returns flag completions.
317 |   private var flagCompletions: [String] {
318 |     (arguments ?? []).flatMap {
    |                       |- error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
    |                       |- note: only concrete types such as structs, enums and classes can conform to protocols
    |                       `- note: required by instance method 'flatMap' where 'SegmentOfResult' = 'Void'
319 |       switch $0.kind {
320 |       case .flag:

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:330:23: error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
328 |   /// Returns option completions.
329 |   private var optionCompletions: [String] {
330 |     (arguments ?? []).flatMap {
    |                       |- error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
    |                       |- note: only concrete types such as structs, enums and classes can conform to protocols
    |                       `- note: required by instance method 'flatMap' where 'SegmentOfResult' = 'Void'
331 |       switch $0.kind {
332 |       case .option:

[#ProtocolTypeNonConformance]: <https://docs.swift.org/compiler/documentation/diagnostics/protocol-type-non-conformance>
[42/56] Compiling ArgumentParser FishCompletionsGenerator.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:318:23: error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
316 |   /// Returns flag completions.
317 |   private var flagCompletions: [String] {
318 |     (arguments ?? []).flatMap {
    |                       |- error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
    |                       |- note: only concrete types such as structs, enums and classes can conform to protocols
    |                       `- note: required by instance method 'flatMap' where 'SegmentOfResult' = 'Void'
319 |       switch $0.kind {
320 |       case .flag:

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:330:23: error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
328 |   /// Returns option completions.
329 |   private var optionCompletions: [String] {
330 |     (arguments ?? []).flatMap {
    |                       |- error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
    |                       |- note: only concrete types such as structs, enums and classes can conform to protocols
    |                       `- note: required by instance method 'flatMap' where 'SegmentOfResult' = 'Void'
331 |       switch $0.kind {
332 |       case .option:

[#ProtocolTypeNonConformance]: <https://docs.swift.org/compiler/documentation/diagnostics/protocol-type-non-conformance>
[43/56] Compiling ArgumentParser ZshCompletionsGenerator.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:318:23: error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
316 |   /// Returns flag completions.
317 |   private var flagCompletions: [String] {
318 |     (arguments ?? []).flatMap {
    |                       |- error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
    |                       |- note: only concrete types such as structs, enums and classes can conform to protocols
    |                       `- note: required by instance method 'flatMap' where 'SegmentOfResult' = 'Void'
319 |       switch $0.kind {
320 |       case .flag:

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:330:23: error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
328 |   /// Returns option completions.
329 |   private var optionCompletions: [String] {
330 |     (arguments ?? []).flatMap {
    |                       |- error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
    |                       |- note: only concrete types such as structs, enums and classes can conform to protocols
    |                       `- note: required by instance method 'flatMap' where 'SegmentOfResult' = 'Void'
331 |       switch $0.kind {
332 |       case .option:

[#ProtocolTypeNonConformance]: <https://docs.swift.org/compiler/documentation/diagnostics/protocol-type-non-conformance>
[44/56] Compiling ArgumentParser Argument.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:318:23: error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
316 |   /// Returns flag completions.
317 |   private var flagCompletions: [String] {
318 |     (arguments ?? []).flatMap {
    |                       |- error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
    |                       |- note: only concrete types such as structs, enums and classes can conform to protocols
    |                       `- note: required by instance method 'flatMap' where 'SegmentOfResult' = 'Void'
319 |       switch $0.kind {
320 |       case .flag:

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:330:23: error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
328 |   /// Returns option completions.
329 |   private var optionCompletions: [String] {
330 |     (arguments ?? []).flatMap {
    |                       |- error: type 'Void' cannot conform to 'Sequence' [#ProtocolTypeNonConformance]
    |                       |- note: only concrete types such as structs, enums and classes can conform to protocols
    |                       `- note: required by instance method 'flatMap' where 'SegmentOfResult' = 'Void'
331 |       switch $0.kind {
332 |       case .option:

[#ProtocolTypeNonConformance]: <https://docs.swift.org/compiler/documentation/diagnostics/protocol-type-non-conformance>
[45/56] Compiling ArgumentParser ParsableCommand.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[46/56] Compiling ArgumentParser ArgumentDecoder.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[47/56] Compiling ArgumentParser ArgumentDefinition.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[48/56] Compiling ArgumentParser ArgumentSet.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[49/56] Compiling ArgumentParser CommandParser.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[50/56] Compiling ArgumentParser NonsenseFlagsValidator.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[51/56] Compiling ArgumentParser ParsableArgumentsValidation.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[52/56] Compiling ArgumentParser PositionalArgumentsValidator.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
[53/56] Compiling ArgumentParser UniqueNamesValidator.swift
/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:282:11: error: insufficient indentation of next 6 lines in multi-line string literal
280 |       result += """
281 | 
282 |           # Offer subcommand / subcommand argument completions
    |           |- error: insufficient indentation of next 6 lines in multi-line string literal
    |           `- note: change indentation of these lines to match closing delimiter
283 |           local -r subcommand="${unparsed_words[0]}"
284 |           unset 'unparsed_words[0]'
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:291:11: error: insufficient indentation of line in multi-line string literal
289 |               "\(functionName)_${subcommand}"
290 |               ;;
291 |           *)
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
292 |               # Offer subcommand completions
293 |               COMPREPLY+=($(compgen -W '\(
    :
298 |           esac
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:296:7: error: insufficient indentation of line in multi-line string literal
294 |                 subcommands.map { $0.commandName.shellEscapeForSingleQuotedString() }
295 |                   .joined(separator: " ")
296 |       )' -- "${cur}"))
    |       |- error: insufficient indentation of line in multi-line string literal
    |       `- note: change indentation of this line to match closing delimiter
297 |               ;;
298 |           esac
299 | 
300 |               """
    |       `- note: should match space here
301 |     }
302 | 

/Users/tigerguo/git/poemMedia/scripts/.build/checkouts/swift-argument-parser/Sources/ArgumentParser/Completions/BashCompletionsGenerator.swift:298:11: error: insufficient indentation of line in multi-line string literal
296 |       )' -- "${cur}"))
297 |               ;;
298 |           esac
    |           |- error: insufficient indentation of line in multi-line string literal
    |           `- note: change indentation of this line to match closing delimiter
299 | 
300 |               """
    |           `- note: should match space here
301 |     }
302 | 
